module alpha

model
  
  entity Alpha {
    input : Int
  
    add : Int = 0 + 0
    division : Float ? = 2.0 / 0.0 (on-demand)
    modulo : Float ? = 1 / (2 % 0) (on-demand)
    str : String = "abc" + "123"
    bool : Boolean = not(true) and (1.0 == 2.0) or ((1 != 2) and (4 < 3 or 1 >= 2))
    conditional : Float = if (true) 1.0 else 2.0
    cast : Float = 1 as Float
    test : Int ? = division as Int (on-demand)
    multiple : Int + = 1
    aggregate : Int = avg(multiple) + add (incremental)
    attr : Float ?
    
    f : Float = division <+ 0.0 (on-demand)
    
    test : Int = beta
  }
  
  entity Beta {
    number : Int = 1
    test : Int
  }
  
  relation Alpha.beta <-> Beta.alpha