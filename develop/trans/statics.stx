module statics

imports signatures/develop-sig

imports statics/core
imports statics/expressions/literals
imports statics/expressions/math
imports statics/expressions/logic

rules // multi-file entry points

  projectOk : scope
  projectOk(s).
  
  fileOk : scope * Start
  fileOk(s, m@Module(id, opt, sections)) :-
    sectionsOk(s, sections).
  
rules // module sections

  sectionsOk maps sectionOk(*, list(*))
  sectionOk : scope * ModuleSection
  
  sectionOk(s, ModelSection(models)) :-
    modelsOk(s, models).
  sectionOk(s, FunctionSection(_)).
  sectionOk(s, DataSection(_)).
  sectionOk(s, ExecuteSection(_)).
  
rules // models
  
  modelsOk maps modelOk(*, list(*))
  
  modelOk : scope * Model
  modelOk(s, Entity(id, _, _, members)) :-
    membersOk(s, members).
    
  modelOk(s, Relation(id, _, _, _, _, _)).
    
  membersOk maps memberOk(*, list(*))
  memberOk : scope * Member
  
  memberOk(s, DerivationAttribute(_, type, _, exp, _)) :- {declared}
    typeOfExp(s, exp) == typeOfAnyType(s, type) | error $[the expression does not have the declared type]@exp.
  
